import{_ as e,c as a,o as r,a0 as i}from"./chunks/framework.6RT3NpRm.js";const m=JSON.parse('{"title":"快速开始","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md","lastUpdated":1740981637000}'),o={name:"getting-started.md"};function l(n,t,d,h,p,s){return r(),a("div",null,t[0]||(t[0]=[i('<h1 id="getting-started" tabindex="-1">快速开始 <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;快速开始 {#getting-started}&quot;">​</a></h1><p>pyChariot 是个跨平台的绿色软件，无需安装即可使用。 下面以 Windows 为例做简要的说明。 其他平台类似，以后有时间的话会补上其他操作系统上的使用说明。</p><p>pyChariot 支持两种打包形式：<em><strong>单文件方式</strong></em> 和 <em><strong>多文件方式</strong></em>。</p><ul><li>多文件方式是最常见的发布形式，所有的文件，包括可执行文件、支持库、资源文件等都在一个目录下。由于文件数量比较多，会显得有点杂乱。</li><li>单文件方式将运行需要的所有文件压缩打包进了单个的可执行文件，运行时会自动解压到系统临时文件夹，并运行对应的可执行文件。 虽然多了一个解压的步骤，但在当前 CPU 和 SSD 的加持下，几乎无感。</li></ul><p>单文件方式相对更为简洁，方便，因此仅提供单文件下载，其他需要请联系作者。</p><h1 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h1><h2 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h2><ul><li><p><a href="http://localhost:5173/pyChariot/changelog.html" target="_blank" rel="noreferrer">点这里下载对应版本</a>，下载前请先确认 <em><strong>操作系统</strong></em> 和 <em><strong>系统架构</strong></em> ，确保下载了适用的版本。 <em>对于使用 Intel 或 AMD 处理器芯片的的 Windows 来说，请下载 win-amd64 版。</em></p></li><li><p>下载完成后将文件解压到您希望存放的地方（例如 <code>D:\\pyChariot</code>）即可。 <em>存放的文件夹名称请使用 ANSI 字符（英文字母+数字），以免带来不必要的问题。</em></p></li></ul><h2 id="开发与调试" tabindex="-1">开发与调试 <a class="header-anchor" href="#开发与调试" aria-label="Permalink to &quot;开发与调试&quot;">​</a></h2><p>pyChariot 共有两个可执行文件：Chariot.exe 和 ChariotKit.exe 。</p><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>pyChariot.exe</td><td>运行环境，供生产环境使用，需分发给最终用户。</td></tr><tr><td>pyChariotKit.exe</td><td>开发环境，供开发调试使用，具调试工具。</td></tr></tbody></table><p>鼠标双击 .exe 即可运行，最低支持 Win7，建议 Win10 及更高。 注：运行后将自动创建相关文件和目录结构，点击查看详细的 <a href="./dirs-and-files.html">文件与目录结构</a> 说明 。</p><p>pyChariot.exe 和 pyChariotKit.exe 提供同样的功能，差别在于 pyChariotKit.exe 还内置了一些开发调试工具，同时在运行中会打开终端窗口和浏览器组件调试窗口。 一般来说，先用 pyChariotKit 开发和调试，然后通过 pyChariot 确认，最后进行分发。</p><p>应用的开发支持主流的前端开发框架，例如：React、Vue、Angular、JQuery ... 应用和 WebApp 的开发调试并无太大差异。具体请参阅对应开发框架的相关文档。</p><h2 id="分发给最终用户" tabindex="-1">分发给最终用户 <a class="header-anchor" href="#分发给最终用户" aria-label="Permalink to &quot;分发给最终用户&quot;">​</a></h2><p>将必须的文件和目录分发给最终用户即可，即：</p><ol><li>pyChariot.exe；</li><li>appchips 目录，其中包含您的应用子文件夹；</li><li>其他项目需要的文件和目录；</li></ol><p>简单的将上述文件分发给最终用户，然后让最终用户双击 pyChariot.exe 即可。</p><p>更进一步，可以考虑用安装制作工具（例如 NSIS）提供可安装版本。</p>',19)]))}const g=e(o,[["render",l]]);export{m as __pageData,g as default};
