import{_ as a,c as o,o as r,a0 as i}from"./chunks/framework.6RT3NpRm.js";const u=JSON.parse('{"title":"事件","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"events.md","filePath":"events.md","lastUpdated":1741653582000}'),t={name:"events.md"};function d(s,e,n,l,h,m){return r(),o("div",null,e[0]||(e[0]=[i('<h1 id="events" tabindex="-1">事件 <a class="header-anchor" href="#events" aria-label="Permalink to &quot;事件 {#events}&quot;">​</a></h1><p>pyChariot 运行中会将部分对应的事件开放给 js 调用。 可以通过自定义脚本，当事件发生时在主窗口环境中执行自定义脚本。</p><p>注意，某些事件发生事，扩展对象可能还没有准备好。 因此通过 pychariot 是否为 null 来判断。所以并不是所有事件都可以用js。 更详细的，可以执行例子中的events来或者更详细的信息和体验。</p><p>pyChariot 支持以下窗口事件中执行自定义脚本： 注意，某些动作会出发多个或者多次事件，因此对事件进行处理时，需要注意到这点。 例如，当鼠标移动窗口时，在松开鼠标键，移动的过程中会不断的发生move事件 当窗口最大化事，会出发 more resize max 最小化，触发 move resize min 回复窗口，resore。。。</p><h2 id="loaded" tabindex="-1">loaded <a class="header-anchor" href="#loaded" aria-label="Permalink to &quot;loaded{#loaded}&quot;">​</a></h2><h2 id="closed" tabindex="-1">closed <a class="header-anchor" href="#closed" aria-label="Permalink to &quot;closed{#closed}&quot;">​</a></h2><h2 id="closing" tabindex="-1">closing <a class="header-anchor" href="#closing" aria-label="Permalink to &quot;closing{#closing}&quot;">​</a></h2><h2 id="shown" tabindex="-1">shown <a class="header-anchor" href="#shown" aria-label="Permalink to &quot;shown{#shown}&quot;">​</a></h2><h2 id="minimized" tabindex="-1">minimized <a class="header-anchor" href="#minimized" aria-label="Permalink to &quot;minimized{#minimized}&quot;">​</a></h2><h2 id="maximized" tabindex="-1">maximized <a class="header-anchor" href="#maximized" aria-label="Permalink to &quot;maximized{#maximized}&quot;">​</a></h2><h2 id="restored" tabindex="-1">restored <a class="header-anchor" href="#restored" aria-label="Permalink to &quot;restored{#restored}&quot;">​</a></h2><h2 id="resized" tabindex="-1">resized <a class="header-anchor" href="#resized" aria-label="Permalink to &quot;resized{#resized}&quot;">​</a></h2><h2 id="moved" tabindex="-1">moved <a class="header-anchor" href="#moved" aria-label="Permalink to &quot;moved{#moved}&quot;">​</a></h2><h2 id="before_show" tabindex="-1">before_show <a class="header-anchor" href="#before_show" aria-label="Permalink to &quot;before_show{#before_show}&quot;">​</a></h2>',14)]))}const b=a(t,[["render",d]]);export{u as __pageData,b as default};
