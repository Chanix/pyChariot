import{_ as n,C as d,c as p,o as r,a0 as i,j as e,a as s,G as l}from"./chunks/framework.6RT3NpRm.js";const m=JSON.parse('{"title":"pyChariot.api.hotkey","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"jsapi_hotkey.md","filePath":"jsapi_hotkey.md","lastUpdated":1741929652000}'),o={name:"jsapi_hotkey.md"},h={id:"set",tabindex:"-1"},k={id:"unset",tabindex:"-1"},y={id:"list",tabindex:"-1"},g={id:"clear",tabindex:"-1"};function _(c,t,u,x,E,b){const a=d("Badge");return r(),p("div",null,[t[12]||(t[12]=i('<h1 id="pychariot-api-hotkey" tabindex="-1">pyChariot.api.hotkey <a class="header-anchor" href="#pychariot-api-hotkey" aria-label="Permalink to &quot;pyChariot.api.hotkey&quot;">​</a></h1><p>全局热键，提供全局热键功能。</p><p>全局热键是指在操作系统中，无论当前焦点在哪个应用程序或窗口，按下特定组合键时都能触发相应操作的功能。</p><p>已知限制：</p><ul><li>在Linux下媒体键可能没有名字(只有扫描码)或者根本就没有。</li><li>阻止继续派发事件功能只在 Windows 上可用。</li><li>为了避免依赖X，Linux 下需要读取原始设备文件 <code>/dev/input/input*</code>，需要 root 才能使用。</li><li>其他的应用程序（如游戏），可能屏蔽热键，导致无法触发事件。</li></ul>',5)),e("h2",h,[t[0]||(t[0]=s("set(key_name, key_js, suppress, timeout, trigger_on_release) ")),l(a,{type:"tip",text:"Since 25.4.1.1"}),t[1]||(t[1]=s()),t[2]||(t[2]=e("a",{class:"header-anchor",href:"#set","aria-label":'Permalink to "set(key_name, key_js, suppress, timeout, trigger_on_release) <Badge type="tip" text="Since 25.4.1.1" /> {#set}"'},"​",-1))]),t[13]||(t[13]=i('<p>设置热键</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key_name</td><td style="text-align:left;">string</td><td style="text-align:left;">热键键名</td></tr><tr><td style="text-align:left;">key_js</td><td style="text-align:left;">string</td><td style="text-align:left;">JavaScript 代码，默认为 null</td></tr><tr><td style="text-align:left;">suppress</td><td style="text-align:left;">boolean</td><td style="text-align:left;">是否阻止继续派发事件，默认为 true</td></tr><tr><td style="text-align:left;">timeout</td><td style="text-align:left;">int</td><td style="text-align:left;">按键间允许的间隔，默认为 1</td></tr><tr><td style="text-align:left;">trigger_on_release</td><td style="text-align:left;">boolean</td><td style="text-align:left;">触发时机，默认为 false</td></tr></tbody></table><p>设置一个全局热键，触发时在主窗口执行指定的 JavaScript 代码。 <br>热键键名格式为 <code>ctrl+shift+a, s</code>，即：用户同时按住 <code>ctrl</code> 、 <code>shift</code> 和 <code>a</code>，释放，然后按 <code>s</code> 时触发。 <br>要表示逗号，加号和空格，请使用它们的名称，即 <code>comma</code>、<code>plus</code>、<code>space</code>。 <br>键名也可以用键盘扫描码，例如空格键为 57.</p><p>JavaScript 代码会在主窗口中异步执行，如果为 null，则等价于删除热键（即 unset）。</p><p>suppress 决定是否阻止按键事件发送到其他程序：</p><ul><li>例 1：true，注册 <code>ctrl+c</code>，按下时执行代码，然后结束（不再执行原已定义的“复制”）。</li><li>例 2：false，注册 <code>ctrl+c</code>，按下时执行代码，然后继续派发事件（继续执行原先定义的“复制”）。</li></ul><p>timeout 决定按键之间允许的间隔，单位为秒。</p><p>trigger_on_release 决定触发执行时机，默认为 false。 默认情况下，热键在按下最后一个键时触发执行脚本。 如果设置为 True，则需要等待到热键按下，然后松开释放的时候，才触发执行脚本。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.hotkey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ctrl+al+t&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;console.log(&quot;Hotkey ctrl+alt+t pressed.&quot;)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',9)),e("h2",k,[t[3]||(t[3]=s("unset(name) ")),l(a,{type:"tip",text:"Since 25.4.1.1"}),t[4]||(t[4]=s()),t[5]||(t[5]=e("a",{class:"header-anchor",href:"#unset","aria-label":'Permalink to "unset(name) <Badge type="tip" text="Since 25.4.1.1" /> {#unset}"'},"​",-1))]),t[14]||(t[14]=i('<p>删除热键</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key_name</td><td style="text-align:left;">string</td><td style="text-align:left;">热键键名</td></tr></tbody></table><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.hotkey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ctrl+al+t&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',3)),e("h2",y,[t[6]||(t[6]=s("list() ")),l(a,{type:"tip",text:"Since 25.4.1.1"}),t[7]||(t[7]=s()),t[8]||(t[8]=e("a",{class:"header-anchor",href:"#list","aria-label":'Permalink to "list() <Badge type="tip" text="Since 25.4.1.1" /> {#list}"'},"​",-1))]),t[15]||(t[15]=i('<p>获取所有热键定义</p><table tabindex="0"><thead><tr><th style="text-align:center;">返回值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">object</td><td style="text-align:left;">一个包含 键名，代码 对的字典</td></tr></tbody></table><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.hotkey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>',3)),e("h2",g,[t[9]||(t[9]=s("clear() ")),l(a,{type:"tip",text:"Since 25.4.1.1"}),t[10]||(t[10]=s()),t[11]||(t[11]=e("a",{class:"header-anchor",href:"#clear","aria-label":'Permalink to "clear() <Badge type="tip" text="Since 25.4.1.1" /> {#clear}"'},"​",-1))]),t[16]||(t[16]=i('<p>清空热键</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.hotkey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div>',2))])}const v=n(o,[["render",_]]);export{m as __pageData,v as default};
