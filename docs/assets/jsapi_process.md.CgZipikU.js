import{_ as n,C as p,c as r,o as d,j as s,ae as i,a as e,G as l}from"./chunks/framework.BLKehFbR.js";const _=JSON.parse('{"title":"进程管理 pyChariot.process","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"jsapi_process.md","filePath":"jsapi_process.md"}'),h={name:"jsapi_process.md"},o={id:"run",tabindex:"-1"},k={id:"runwait",tabindex:"-1"};function g(y,t,c,E,x,b){const a=p("Badge");return d(),r("div",null,[t[6]||(t[6]=s("h1",{id:"进程管理-pychariot-process",tabindex:"-1"},[e("进程管理 pyChariot.process "),s("a",{class:"header-anchor",href:"#进程管理-pychariot-process","aria-label":'Permalink to "进程管理 pyChariot.process"'},"​")],-1)),t[7]||(t[7]=s("p",null,"操作系统的进程管理与操作",-1)),s("h2",o,[t[0]||(t[0]=e("pyChariot.process.exec(bin_path, parameters) ")),l(a,{type:"tip",text:"Since 25.3.5.1"}),t[1]||(t[1]=e()),t[2]||(t[2]=s("a",{class:"header-anchor",href:"#run","aria-label":'Permalink to "pyChariot.process.exec(bin_path, parameters) <Badge type="tip" text="Since 25.3.5.1" /> {#run}"'},"​",-1))]),t[8]||(t[8]=i('<p>运行指定的可执行文件</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">bin_path</td><td style="text-align:left;">string</td><td style="text-align:left;">可执行文件名</td></tr><tr><td style="text-align:left;">parameters</td><td style="text-align:left;">string</td><td style="text-align:left;">命令行参数，可忽略。</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:left;">返回值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">number</td><td style="text-align:left;">新实例的进程号</td></tr></tbody></table><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;notepad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;notepad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/aaa.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',5)),s("h2",k,[t[3]||(t[3]=e("pyChariot.process.execwait(bin_path, parameters) ")),l(a,{type:"tip",text:"Since 25.3.5.1"}),t[4]||(t[4]=e()),t[5]||(t[5]=s("a",{class:"header-anchor",href:"#runwait","aria-label":'Permalink to "pyChariot.process.execwait(bin_path, parameters) <Badge type="tip" text="Since 25.3.5.1" /> {#runwait}"'},"​",-1))]),t[9]||(t[9]=i('<p>运行指定的可执行文件，并等待其运行完毕。<br>运行完毕后，返回运行结果信息。</p><table tabindex="0"><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">bin_path</td><td style="text-align:left;">string</td><td style="text-align:left;">可执行文件名</td></tr><tr><td style="text-align:left;">parameters</td><td style="text-align:left;">string</td><td style="text-align:left;">命令行参数，可忽略。</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:left;">返回值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">object</td><td style="text-align:left;">一个字典对象，其中：</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">retcode (number) 进程返回值</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">stdout (string) 标准输出</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">stderr (string) 标准错误</td></tr></tbody></table><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execwait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;notepad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __A.process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execwait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;notepad&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/aaa.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',5))])}const u=n(h,[["render",g]]);export{_ as __pageData,u as default};
