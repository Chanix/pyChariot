import{_ as n,C as d,c as p,o as h,j as i,ae as a,a as s,G as l}from"./chunks/framework.BLKehFbR.js";const F=JSON.parse('{"title":"pyChariot.device","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"jsapi_device.md","filePath":"jsapi_device.md"}'),r={name:"jsapi_device.md"},o={id:"isPOSIX",tabindex:"-1"},g={id:"isLinux",tabindex:"-1"},k={id:"isWindows",tabindex:"-1"},y={id:"isMacOS",tabindex:"-1"},b={id:"isFreeBSD",tabindex:"-1"},x={id:"isNetBSD",tabindex:"-1"},u={id:"isOpenBSD",tabindex:"-1"},E={id:"isBSD",tabindex:"-1"},S={id:"isSunOS",tabindex:"-1"},v={id:"isAIX",tabindex:"-1"},_={id:"getCPUCount",tabindex:"-1"},C={id:"getCPUTimes",tabindex:"-1"},c={id:"getCPUStats",tabindex:"-1"};function f(T,t,P,A,m,B){const e=d("Badge");return h(),p("div",null,[t[39]||(t[39]=i("h1",{id:"pychariot-device",tabindex:"-1"},[s("pyChariot.device "),i("a",{class:"header-anchor",href:"#pychariot-device","aria-label":'Permalink to "pyChariot.device"'},"​")],-1)),t[40]||(t[40]=i("p",null,"设备信息，当前运行设备的相关信息",-1)),i("h2",o,[t[0]||(t[0]=s("isPOSIX() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[1]||(t[1]=s()),t[2]||(t[2]=i("a",{class:"header-anchor",href:"#isPOSIX","aria-label":'Permalink to "isPOSIX() <Badge type="tip" text="Since 25.3.5.1" /> {#isPOSIX}"'},"​",-1))]),t[41]||(t[41]=a("",3)),i("h2",g,[t[3]||(t[3]=s("isLinux() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[4]||(t[4]=s()),t[5]||(t[5]=i("a",{class:"header-anchor",href:"#isLinux","aria-label":'Permalink to "isLinux() <Badge type="tip" text="Since 25.3.5.1" /> {#isLinux}"'},"​",-1))]),t[42]||(t[42]=a("",3)),i("h2",k,[t[6]||(t[6]=s("isWindows() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[7]||(t[7]=s()),t[8]||(t[8]=i("a",{class:"header-anchor",href:"#isWindows","aria-label":'Permalink to "isWindows() <Badge type="tip" text="Since 25.3.5.1" /> {#isWindows}"'},"​",-1))]),t[43]||(t[43]=a("",3)),i("h2",y,[t[9]||(t[9]=s("isMacOS() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[10]||(t[10]=s()),t[11]||(t[11]=i("a",{class:"header-anchor",href:"#isMacOS","aria-label":'Permalink to "isMacOS() <Badge type="tip" text="Since 25.3.5.1" /> {#isMacOS}"'},"​",-1))]),t[44]||(t[44]=a("",3)),i("h2",b,[t[12]||(t[12]=s("isFreeBSD() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[13]||(t[13]=s()),t[14]||(t[14]=i("a",{class:"header-anchor",href:"#isFreeBSD","aria-label":'Permalink to "isFreeBSD() <Badge type="tip" text="Since 25.3.5.1" /> {#isFreeBSD}"'},"​",-1))]),t[45]||(t[45]=a("",3)),i("h2",x,[t[15]||(t[15]=s("isNetBSD() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[16]||(t[16]=s()),t[17]||(t[17]=i("a",{class:"header-anchor",href:"#isNetBSD","aria-label":'Permalink to "isNetBSD() <Badge type="tip" text="Since 25.3.5.1" /> {#isNetBSD}"'},"​",-1))]),t[46]||(t[46]=a("",3)),i("h2",u,[t[18]||(t[18]=s("isOpenBSD() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[19]||(t[19]=s()),t[20]||(t[20]=i("a",{class:"header-anchor",href:"#isOpenBSD","aria-label":'Permalink to "isOpenBSD() <Badge type="tip" text="Since 25.3.5.1" /> {#isOpenBSD}"'},"​",-1))]),t[47]||(t[47]=a("",3)),i("h2",E,[t[21]||(t[21]=s("isBSD() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[22]||(t[22]=s()),t[23]||(t[23]=i("a",{class:"header-anchor",href:"#isBSD","aria-label":'Permalink to "isBSD() <Badge type="tip" text="Since 25.3.5.1" /> {#isBSD}"'},"​",-1))]),t[48]||(t[48]=a("",3)),i("h2",S,[t[24]||(t[24]=s("isSunOS() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[25]||(t[25]=s()),t[26]||(t[26]=i("a",{class:"header-anchor",href:"#isSunOS","aria-label":'Permalink to "isSunOS() <Badge type="tip" text="Since 25.3.5.1" /> {#isSunOS}"'},"​",-1))]),t[49]||(t[49]=a("",3)),i("h2",v,[t[27]||(t[27]=s("isAIX() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[28]||(t[28]=s()),t[29]||(t[29]=i("a",{class:"header-anchor",href:"#isAIX","aria-label":'Permalink to "isAIX() <Badge type="tip" text="Since 25.3.5.1" /> {#isAIX}"'},"​",-1))]),t[50]||(t[50]=a("",3)),i("h2",_,[t[30]||(t[30]=s("getCPUCount(logical) ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[31]||(t[31]=s()),t[32]||(t[32]=i("a",{class:"header-anchor",href:"#getCPUCount","aria-label":'Permalink to "getCPUCount(logical) <Badge type="tip" text="Since 25.3.5.1" /> {#getCPUCount}"'},"​",-1))]),t[51]||(t[51]=a("",6)),i("h2",C,[t[33]||(t[33]=s("getCPUTimes(percpu) ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[34]||(t[34]=s()),t[35]||(t[35]=i("a",{class:"header-anchor",href:"#getCPUTimes","aria-label":'Permalink to "getCPUTimes(percpu) <Badge type="tip" text="Since 25.3.5.1" /> {#getCPUTimes}"'},"​",-1))]),t[52]||(t[52]=a("",9)),i("h2",c,[t[36]||(t[36]=s("getCPUStats() ")),l(e,{type:"tip",text:"Since 25.3.5.1"}),t[37]||(t[37]=s()),t[38]||(t[38]=i("a",{class:"header-anchor",href:"#getCPUStats","aria-label":'Permalink to "getCPUStats() <Badge type="tip" text="Since 25.3.5.1" /> {#getCPUStats}"'},"​",-1))]),t[53]||(t[53]=a("",5))])}const I=n(r,[["render",f]]);export{F as __pageData,I as default};
