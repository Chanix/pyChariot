import{_ as l,C as h,c as p,o as k,j as s,a0 as n,a as i,G as e}from"./chunks/framework.6RT3NpRm.js";const T=JSON.parse('{"title":"pyChariot.api.memdb","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"jsapi_memdb.md","filePath":"jsapi_memdb.md","lastUpdated":1743403431000}'),E={name:"jsapi_memdb.md"},d={id:"pychariot-api-memdb",tabindex:"-1"},r={id:"execute",tabindex:"-1"},y={id:"fetchOne",tabindex:"-1"},g={id:"fetchAll",tabindex:"-1"},o={id:"fetchMany",tabindex:"-1"},A={id:"getRowCount",tabindex:"-1"},F={id:"getLastRowId",tabindex:"-1"},b={id:"renew",tabindex:"-1"};function _(x,t,m,C,f,u){const a=h("Badge");return k(),p("div",null,[s("h1",d,[t[0]||(t[0]=i("pyChariot.api.memdb ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[1]||(t[1]=i()),t[2]||(t[2]=s("a",{class:"header-anchor",href:"#pychariot-api-memdb","aria-label":'Permalink to "pyChariot.api.memdb <Badge type="tip" text="Since 25.3.5.1" />"'},"​",-1))]),t[24]||(t[24]=s("p",null,"开箱即用的简单内存数据库，处理简单的数据处理和应用逻辑。",-1)),t[25]||(t[25]=s("p",null,"基于 sqlite3 的 :memory: 实现，数据存储在内存中，并非真正技术意义上的内存数据库。 所有操作都使用同一个数据库连接，不支持事务，需自行处理数据完整和安全性。",-1)),t[26]||(t[26]=s("p",null,"更复杂更高级的数据库处理请使用 pyChariot.sqlite3 。",-1)),s("h2",r,[t[3]||(t[3]=i("execute(sql, if_fetch) ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[4]||(t[4]=i()),t[5]||(t[5]=s("a",{class:"header-anchor",href:"#execute","aria-label":'Permalink to "execute(sql, if_fetch) <Badge type="tip" text="Since 25.3.5.1" /> {#execute}"'},"​",-1))]),t[27]||(t[27]=n("",3)),s("h2",y,[t[6]||(t[6]=i("fetchOne() ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[7]||(t[7]=i()),t[8]||(t[8]=s("a",{class:"header-anchor",href:"#fetchOne","aria-label":'Permalink to "fetchOne() <Badge type="tip" text="Since 25.3.5.1" /> {#fetchOne}"'},"​",-1))]),t[28]||(t[28]=n("",2)),s("h2",g,[t[9]||(t[9]=i("fetchAll() ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[10]||(t[10]=i()),t[11]||(t[11]=s("a",{class:"header-anchor",href:"#fetchAll","aria-label":'Permalink to "fetchAll() <Badge type="tip" text="Since 25.3.5.1" /> {#fetchAll}"'},"​",-1))]),t[29]||(t[29]=n("",2)),s("h2",o,[t[12]||(t[12]=i("fetchMany(count) ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[13]||(t[13]=i()),t[14]||(t[14]=s("a",{class:"header-anchor",href:"#fetchMany","aria-label":'Permalink to "fetchMany(count) <Badge type="tip" text="Since 25.3.5.1" /> {#fetchMany}"'},"​",-1))]),t[30]||(t[30]=n("",3)),s("h2",A,[t[15]||(t[15]=i("getRowCount() ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[16]||(t[16]=i()),t[17]||(t[17]=s("a",{class:"header-anchor",href:"#getRowCount","aria-label":'Permalink to "getRowCount() <Badge type="tip" text="Since 25.3.5.1" /> {#getRowCount}"'},"​",-1))]),t[31]||(t[31]=n("",2)),s("h2",F,[t[18]||(t[18]=i("getLastRowId() ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[19]||(t[19]=i()),t[20]||(t[20]=s("a",{class:"header-anchor",href:"#getLastRowId","aria-label":'Permalink to "getLastRowId() <Badge type="tip" text="Since 25.3.5.1" /> {#getLastRowId}"'},"​",-1))]),t[32]||(t[32]=n("",2)),s("h2",b,[t[21]||(t[21]=i("renew() ")),e(a,{type:"tip",text:"Since 25.3.5.1"}),t[22]||(t[22]=i()),t[23]||(t[23]=s("a",{class:"header-anchor",href:"#renew","aria-label":'Permalink to "renew() <Badge type="tip" text="Since 25.3.5.1" /> {#renew}"'},"​",-1))]),t[33]||(t[33]=n("",4))])}const D=l(E,[["render",_]]);export{T as __pageData,D as default};
